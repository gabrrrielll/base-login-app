{"version":3,"file":"login-app.js","sourceRoot":"","sources":["../../src/login-app.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,2BAA2B,CAAC;AACnC,OAAO,2BAA2B,CAAC;AACnC,OAAO,2BAA2B,CAAC;AACnC,OAAO,6BAA6B,CAAC;AAErC,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AAGjD,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAuBtC,oFAAoF;IACpF,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,WAAW,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,iDAAiD;IACzC,gBAAgB;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,+CAA+C;IACvE,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;UAIL,WAAW,CAAC,eAAe;YAC3B,CAAC,CAAC,IAAI,CAAA;sFACsE;YAC5E,CAAC,CAAC,IAAI,CAAA;yCACyB,IAAI,CAAC,gBAAgB,gBAAgB;;;;KAIzE,CAAC;IACJ,CAAC;;AA9CM,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;GAmBlB,AAnBY,CAmBX;AArBS,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAiDpB","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport './components/AppHeader.js';\nimport './components/AppFooter.js';\nimport './components/UserLogin.js';\nimport './components/UserDetails.js';\n\nimport { authService } from './services/AuthService.js';\n\n@customElement('login-app')\nexport class LoginApp extends LitElement {\n\n  static styles = css`\n    :host {\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: flex-start;\n      font-size: calc(10px + 2vmin);\n      color: #1a2b42;\n      margin: 0 auto;\n      text-align: center;\n    }\n\n    main {\n      display: flex;\n      flex-direction: column;\n      flex-grow: 1;\n      align-items: center;\n    }\n  `;\n\n  // When the element is first connected to the DOM, listen for the auth-changed event\n  connectedCallback() {\n    super.connectedCallback();\n    authService.addEventListener('auth-changed', this.handleAuthChange.bind(this));\n  }\n\n  // Handle login success by triggering a UI update\n  private handleAuthChange() {\n    this.requestUpdate(); // Request a UI update when auth status changes\n  }\n\n  render() {\n    return html`\n      <app-header></app-header>\n      <main>\n        <!-- Conditionally render user-login or user-details based on authentication status -->\n        ${authService.isAuthenticated\n          ? html`\n            <user-details></user-details> <!-- Show user details if authenticated -->`\n          : html`\n            <user-login @login-success=${this.handleAuthChange}></user-login>`}\n        <!-- Show login form if not authenticated -->\n      </main>\n      <app-footer></app-footer>\n    `;\n  }\n}\n"]}