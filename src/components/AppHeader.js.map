{"version":3,"file":"AppHeader.js","sourceRoot":"","sources":["../../../src/components/AppHeader.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC,CAAC,yCAAyC;AACtF,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC,CAAC,gDAAgD;AAE7G,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,kCAAkC,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AAGxE,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IAAlC;;QACuB,WAAM,GAAG,gBAAgB,CAAC;IA+CxD,CAAC;IAVC,0BAA0B;IAC1B,MAAM;QACJ,OAAO,IAAI,CAAA;;wDAEyC,IAAI;iCAC3B,IAAI,CAAC,MAAM;;;KAGvC,CAAC;IACJ,CAAC;;AA5CD,oCAAoC;AAC7B,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgClB,AAhCY,CAgCX;AAnC0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCAA2B;AAD3C,SAAS;IAFrB,aAAa,CAAC,YAAY,CAAC,CAAC,iDAAiD;GAEjE,SAAS,CAgDrB","sourcesContent":["import { LitElement, html, css } from 'lit'; // Importing necessary LitElement modules\nimport { property, customElement } from 'lit/decorators.js'; // Importing decorator to define custom elements\n\nconst logo = new URL('../../../assets/open-wc-logo.svg', import.meta.url).href;\n@customElement('app-header') // Defining the custom element named 'app-header'\n\nexport class AppHeader extends LitElement {\n  @property({ type: String }) header = 'Base Login App';\n\n  // Defining styles for the component\n  static styles = css`\n    :host {\n      display: block;\n      background-color: #002147; /* Background color of the header */\n      color: white; /* Text color */\n      padding: 10px; /* Padding around the header content */\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Shadow for depth effect */\n    }\n\n    .header {\n      display: flex;\n      justify-content: space-between; /* Space items equally apart */\n      align-items: center; /* Vertically center items */\n    }\n\n    .title {\n      display: flex;\n      justify-content: center; /* Space items equally apart */\n      align-items: center; /* Vertically center items */\n      width: calc(100vw - 270px); /* Subtract 80px from 100vw; */\n      padding-right: 110px;\n    }\n\n    .logo {\n      width: 110px; /* Width of the logo image */\n      padding-left: 30px; /* Add some margin to the right of the image */\n    }\n\n    .logo img {\n      width: 100px; /* Width of the logo image */\n      height: 100px; /* Height of the logo image */\n    }\n  `;\n\n  // Rendering the component\n  render() {\n    return html`\n      <div class=\"header\">\n        <div class=\"logo\"><img alt=\"open-wc logo\" src=${logo} /></div>\n        <div class=\"title\"><h2>${this.header}</h2></div>\n      </div>\n      </div>\n    `;\n  }\n}\n\n// Declaring the custom element globally\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'app-header': AppHeader;\n  }\n}\n"]}