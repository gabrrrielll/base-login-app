{"version":3,"file":"UserDetails.js","sourceRoot":"","sources":["../../../src/components/UserDetails.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC,CAAC,yCAAyC;AACtF,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC,CAAC,iDAAiD;AACpG,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC,CAAC,qDAAqD;AAGxG,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IA2CzC,qCAAqC;IACrC,MAAM;QACJ,MAAM,EAAE,QAAQ,EAAE,GAAG,WAAW,CAAC,CAAC,sCAAsC;QAExE,OAAO,IAAI,CAAA;;kCAEmB,QAAQ,EAAE,IAAI;mCACb,QAAQ,EAAE,KAAK;mCACf,QAAQ,EAAE,KAAK;uBAC3B,IAAI,CAAC,MAAM;KAC7B,CAAC;IACJ,CAAC;IAED,qCAAqC;IAC7B,MAAM;QACZ,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,6BAA6B;QACnD,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,gDAAgD;IACzG,CAAC;;AA3DD,iDAAiD;AAC1C,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuClB,AAvCY,CAuCX;AAzCS,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC,CAAC,mDAAmD;GACrE,WAAW,CA6DvB","sourcesContent":["import { LitElement, html, css } from 'lit'; // Importing necessary LitElement modules\nimport { customElement } from 'lit/decorators.js'; // Importing decorators to define custom elements\nimport { authService } from '../services/AuthService.js'; // Importing the authService for getting user details\n\n@customElement('user-details') // Defining the custom element named 'user-details'\nexport class UserDetails extends LitElement {\n  // Defining styles for the user details component\n  static styles = css`\n    :host {\n      display: block;\n      padding: 20px;\n      max-width: 500px;\n      margin: auto;\n      background-color: #f7f7f7;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      text-align: left;\n    }\n\n    h2 {\n      margin-bottom: 40px;\n      font-size: 1.5em;\n      color: #333;\n      text-align: center;\n    }\n\n    p {\n      margin: 10px 0;\n      color: #555;\n    }\n\n    button {\n      width: 490px;\n      padding: 10px;\n      background-color: #002147;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 1em;\n      cursor: pointer;\n      margin-top: 20px;\n    }\n\n    button:hover {\n      background-color: #003366;\n    }\n  `;\n\n  // Rendering the user details content\n  render() {\n    const { userData } = authService; // Retrieve user data from authService\n\n    return html`\n      <h2>User Details</h2> <!-- Section title -->\n      <p><strong>Name:</strong> ${userData?.name}</p> <!-- Display user name -->\n      <p><strong>Email:</strong> ${userData?.email}</p> <!-- Display user email -->\n      <p><strong>Phone:</strong> ${userData?.phone}</p> <!-- Display user phone -->\n      <button @click=${this.logout}>Logout</button> <!-- Logout button -->\n    `;\n  }\n\n  // Method to handle the logout action\n  private logout() {\n    authService.logout(); // Call authService to logout\n    this.dispatchEvent(new CustomEvent('logout-success')); // Dispatch a custom event for successful logout\n  }\n}\n\n// Declaring the custom element globally\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'user-details': UserDetails;\n  }\n}\n"]}