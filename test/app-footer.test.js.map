{"version":3,"file":"app-footer.test.js","sourceRoot":"","sources":["../../test/app-footer.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC,CAAC,8BAA8B;AAChF,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC,CAAC,mCAAmC;AAG9E,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,mDAAmD;IACnD,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,EAAE,GAAG,MAAM,OAAO,CAAY,IAAI,CAAA;gCACZ,CAAC,CAAC,CAAC,wCAAwC;QACvE,MAAM,EAAE,CAAC,cAAc,CAAC,CAAC,iCAAiC;QAE1D,gDAAgD;QAChD,MAAM,UAAU,GAAG,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC;QAClF,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAGH,wCAAwC;IACxC,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,EAAE,GAAG,MAAM,OAAO,CAAY,IAAI,CAAA;gCACZ,CAAC,CAAC,CAAC,wCAAwC;QACvE,MAAM,EAAE,CAAC,cAAc,CAAC,CAAC,iCAAiC;QAE1D,2CAA2C;QAC3C,MAAM,MAAM,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAC;QACpC,MAAM,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,4BAA4B;IACjG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { fixture, html } from '@open-wc/testing'; // Importing testing utilities\nimport { expect } from '@esm-bundle/chai'; // Importing Chai assertion library\nimport { AppFooter } from '../src/components/AppFooter.js';\n\ndescribe('AppFooter', () => {\n  // Test to check if the component renders correctly\n  it('should render the footer with correct text', async () => {\n    const el = await fixture<AppFooter>(html`\n      <app-footer></app-footer>`); // Creating an instance of the component\n    await el.updateComplete; // Wait for the element to render\n\n    // Check if the footer contains the correct text\n    const footerText = el.shadowRoot && el.shadowRoot.querySelector('p')?.textContent;\n    footerText && expect(footerText).to.contain('Made with love by open-wc');\n  });\n\n\n  // Test to check the style of the footer\n  it('should have the correct background color', async () => {\n    const el = await fixture<AppFooter>(html`\n      <app-footer></app-footer>`); // Creating an instance of the component\n    await el.updateComplete; // Wait for the element to render\n\n    // Check if the background color is correct\n    const styles = getComputedStyle(el);\n    await expect(styles.backgroundColor).to.equal('rgba(0, 0, 0, 0)'); // RGB equivalent of #002147\n  });\n});\n"]}